{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","item","id","payload","map","contact","Provider","dispatch","setState","axios","get","resp","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","defaultProps","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","clearForm","history","push","EditContact","updContact","match","params","put","Header","brand","href","About","NotFound","Test","title","body","fetch","then","response","json","App","basename","process","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0d4ffea.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    item => item.id !== action.payload\r\n                )\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => \r\n                  contact.id === action.payload.id ?\r\n                  contact = action.payload :\r\n                  contact\r\n                )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n         state = {\r\n           contacts: [],\r\n           dispatch: action => this.setState(\r\n             state => reducer(state, action)\r\n           )\r\n         };\r\n\r\n         async componentDidMount() {\r\n           const resp = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n           \r\n           this.setState({contacts: resp.data})\r\n         }\r\n\r\n         render() {\r\n           return (\r\n             <Context.Provider value={this.state}>\r\n               {this.props.children}\r\n             </Context.Provider>\r\n           );\r\n         }\r\n       }\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\n\r\nexport default class Contact extends Component {\r\n    // state cannot be mutated directly, use setState instead\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n  onShowClick = () => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  }\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    dispatch({type: 'DELETE_CONTACT', payload: id});\r\n  }\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                return (\r\n                  <div className=\"card card-body mb-3\">\r\n                    <h4>\r\n                      {name}{\" \"}\r\n                      <i\r\n                        onClick={this.onShowClick}\r\n                        className=\"fas fa-sort-down\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                      />\r\n                      <i\r\n                        className=\"fas fa-times\"\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                          float: \"right\",\r\n                          color: \"red\"\r\n                        }}\r\n                        onClick={this.onDeleteClick.bind(\r\n                          this,\r\n                          id,\r\n                          value.dispatch\r\n                        )}\r\n                      />\r\n                      <Link to={`contact/edit/${id}`}>\r\n                        <i\r\n                          className=\"fas fa-pencil-alt\"\r\n                          style={{\r\n                            cursor: \"pointer\",\r\n                            float: \"right\",\r\n                            color: \"black\",\r\n                            marginRight: \"1rem\"\r\n                          }}\r\n                        />\r\n                      </Link>\r\n                    </h4>\r\n                    {showContactInfo ? (\r\n                      <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">Email: {email}</li>\r\n                        <li className=\"list-group-item\">Phone: {phone}</li>\r\n                      </ul>\r\n                    ) : null}\r\n                  </div>\r\n                );\r\n            }}\r\n        </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n// validation\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n//   deleteClickHandler: PropTypes.func.isRequired\r\n};\r\n// default props\r\nContact.defaultProps = {\r\n  name: \"Anonymous\",\r\n  email: \"No email specified\",\r\n  phone: \"No phone specified\"\r\n};\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nexport default class Contacts extends Component {\r\n//   deleteContact = id => {\r\n//       const newContacts = this.state.contacts.filter(item => item.id !== id);\r\n\r\n//       this.setState({ contacts: newContacts })\r\n//   }\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact </span>List\r\n              </h1>\r\n              {value.contacts.map(item => (\r\n                <Contact\r\n                  key={item.id}\r\n                  contact={item}\r\n                //   deleteClickHandler={this.deleteContact.bind(this, item.id)}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange, error}) => { \r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input\r\n          type={type}\r\n          name={name}\r\n          className={classnames(\"form-control form-control-lg\", {\r\n              'is-invalid': error\r\n          })}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n        {error && <div className=\"invalid-feedback\">{error}</div>} \r\n      </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\n// import uuid from \"uuid\";\r\nimport axios from 'axios';\r\n\r\nexport default class AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  //universal method\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // check for errors\r\n    if (name === '') {\r\n      this.setState({errors: {name: 'Name is required'}});\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({errors: {email: 'Email is required'}});\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({errors: {phone: 'Phone is required'}});\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name, \r\n      email, \r\n      phone\r\n    };\r\n\r\n    const resp = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n      \r\n    dispatch({ type: \"ADD_CONTACT\", payload: resp.data });\r\n\r\n    this.clearForm();\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  clearForm() {\r\n      this.setState({name: '', email: '', phone: '', errors: {}})\r\n  }\r\n\r\n  render() {\r\n    const {name, email, phone, errors} = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios';\r\n\r\nexport default class EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n      const { id } = this.props.match.params;\r\n      const resp = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n\r\n      const contact = resp.data;\r\n\r\n      this.setState({\r\n          name: contact.name,\r\n          email: contact.email,\r\n          phone: contact.phone\r\n      });\r\n  }\r\n\r\n  //universal method\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // check for errors\r\n    if (name === '') {\r\n      this.setState({errors: {name: 'Name is required'}});\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({errors: {email: 'Email is required'}});\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({errors: {phone: 'Phone is required'}});\r\n      return;\r\n    }\r\n\r\n    const updContact = { name, email, phone };\r\n    const {id} = this.props.match.params;\r\n    const resp = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n    dispatch({type: 'UPDATE_CONTACT', payload: resp.data})\r\n\r\n    this.clearForm();\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  clearForm() {\r\n      this.setState({name: '', email: '', phone: '', errors: {}})\r\n  }\r\n\r\n  render() {\r\n    const {name, email, phone, errors} = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Header(props) {\r\n    const {brand} = props;\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{brand}</a>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\">\r\n                            <i className=\"fas fa-home\"></i> Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/contact/add\" className=\"nav-link\">\r\n                            <i className=\"fas fa-plus\"></i> Add Contact\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/about\" className=\"nav-link\">\r\n                            <i className=\"fas fa-question\"></i> About\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nHeader.defaultProps = {\r\n    brand: 'My app'\r\n}\r\n\r\n// validation\r\nHeader.propTypes = {\r\n    // 'brand' prop will accept only string\r\n    brand: PropTypes.string.isRequired\r\n}","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, this page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n          .then(response => response.json())\r\n          .then(data => this.setState({\r\n              title: data.title,\r\n              body: data.body\r\n          }));\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //     console.log('componentWillMount...');\r\n    // }\r\n\r\n    // componentDidUpdate() {\r\n    //     console.log('didUpdate');\r\n    // }\r\n\r\n    // componentWillUpdate() {\r\n    //     console.log('willUpdate');\r\n    // }\r\n\r\n    // componentWillReceiveProps(nextProps, nextState) {\r\n    //     console.log('componentWillReceiveProps');\r\n    // }\r\n\r\n    render() {\r\n        const { title, body } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Header brand=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}/>\n              <Route exact path=\"/contact/add\" component={AddContact}/>\n              <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n              <Route exact path=\"/about\" component={About}/>\n              <Route exact path=\"/test\" component={Test}/>\n              <Route component={NotFound}/>\n            </Switch>\n          </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}